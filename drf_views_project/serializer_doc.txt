
Serializer Overview
-----------------------------------------------------------------------------------------------------------------------
Serializers in Django Rest Framework (DRF) are a key component that allows complex data types, such as querysets and model 
instances, to be converted to Python data types that can be easily rendered into JSON, XML, or other content types.

Serializers also provide deserialization, allowing parsed data to be converted back into complex types, validating 
incoming data, and handling model instances.


Types of Serializers
-----------------------------------------------------------------------------------------------------------------------

1. ModelSerializer
-----------------------------------------------------------------------------------------
It a class provided by DRF that automatically generates a set of fields and methods based on the model definition.

It provides a shortcut for creating serializers that deal with model instances and associated CRUD operations.

It generates fields based on the model's fields and automatically includes default validators and methods like create() and update().


2. Serializer
-----------------------------------------------------------------------------------------
The base class for all DRF serializers is Serializer.

It allows you to define custom fields and methods for serialization and deserialization.

You can manually specify each field and its behavior, validation rules, and custom methods for handling data.
